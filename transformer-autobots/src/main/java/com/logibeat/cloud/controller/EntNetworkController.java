package com.logibeat.cloud.controller;import com.logibeat.cloud.common.annotation.NotLogin;import com.logibeat.cloud.common.vo.HistoryRouteVo;import com.logibeat.cloud.common.vo.NetworkVo;import com.logibeat.cloud.core.dto.EntNetworkDTO;import com.logibeat.cloud.core.dto.TaskDto;import com.logibeat.cloud.services.EntNetworkService;import com.logibeat.cloud.util.tools.pageMdl.PageResultDTO;import com.logibeat.cloud.util.tools.responseMdl.JSONPrompt;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;/** * 网点 * Created by Yujinjun on 2016/5/13. */@Controller(value = "autobots.EntNetworkController")@RequestMapping(value = "Driver/Network/api")@Scope("prototype")public class EntNetworkController extends BaseController{    @Autowired    private EntNetworkService entNetworkService;    /**     * 查找附近网点列表     *     * @param entNetworkDTO     * @return     */    @RequestMapping(value = "/findPageNear")    @ResponseBody    public JSONPrompt<PageResultDTO<NetworkVo>> findPageNear(EntNetworkDTO entNetworkDTO) {        JSONPrompt<PageResultDTO<NetworkVo>> jsonResult = new JSONPrompt<>();        entNetworkDTO.more();        entNetworkDTO.setBaseUserId(baseUserId);        PageResultDTO<NetworkVo> page = entNetworkService.findPageNear(entNetworkDTO);        jsonResult.setData(page);        return jsonResult;    }    /**     * 判断网点是否存在     *     * @param id     * @return     */    @RequestMapping(value = "/isExist")    @ResponseBody    public JSONPrompt isExist(String id) {        return new JSONPrompt<>(entNetworkService.isExist(id));    }    /**     * 判断历史线路是否存在     * @param taskDto     * @return     */    @RequestMapping(value = "/isExistHistoryRoute")    @ResponseBody    public JSONPrompt<HistoryRouteVo> isExistHistoryRoute(TaskDto taskDto) {        taskDto.setBaseUserId(baseUserId);        HistoryRouteVo vo = entNetworkService.isExistHistoryRoute(taskDto);        return new JSONPrompt(vo);    }    /**     * 查找目的网点     * @param entNetworkDTO     * @return     */    @RequestMapping(value = "/findPageAll")    @ResponseBody    @NotLogin    public JSONPrompt<PageResultDTO<NetworkVo>> findPageAll(EntNetworkDTO entNetworkDTO) {        JSONPrompt<PageResultDTO<NetworkVo>> jsonResult = new JSONPrompt<>();        entNetworkDTO.more();        entNetworkDTO.setBaseUserId(baseUserId);        PageResultDTO<NetworkVo> page = entNetworkService.findPageAll(entNetworkDTO);        jsonResult.setData(page);        return jsonResult;    }}